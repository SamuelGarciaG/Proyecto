{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/container/container.component.ts","webpack:///src/app/container/container.component.html","webpack:///src/app/services/films.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContainerComponent","filmService","slideConfig","console","log","getFilms","subscribe","films","filmsArray","slickInit","breakpoint","afterChange","beforeChange","FilmService","http","filmsUrl","get","url","name","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title: string;\n\n  constructor() {\n    this.title = 'Catapelis';\n  }\n}\n","<html>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n\n<div class=\"navbar\">\n  <a class=\"active\" href=\"#\"><i class=\"fa fa-fw fa-home\"></i> AppTFG</a>\n  <a href=\"#\"><i class=\"fa fa-fw fa-film\"></i> Films</a>\n  <a href=\"#\"><i class=\"fa fa-fw fa-tv\"></i> Series</a>\n  <a href=\"#\"><i class=\"fa fa-fw fa-star\"></i> Reviews</a>\n  <a href=\"#\"><i class=\"fa fa-fw fa-search\"></i> Search</a>\n</div>\n\n\n<app-container></app-container>\n</html>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ContainerComponent } from './container/container.component';\n\n\nimport { Angular2UsefulSwiperModule } from 'angular2-useful-swiper';\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    SlickCarouselModule,\n    Angular2UsefulSwiperModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Film } from \"../model/film\";\nimport { FilmService } from '../services/films.service';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  filmsArray: Film[];\n\n  constructor(private filmService: FilmService) { }\n\n /* config: SwiperOptions = {\n    pagination: { el: '.swiper-pagination', clickable: true },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    },\n    spaceBetween: 30\n  };*/\n\n  slideConfig = {\n    \"slidesToShow\": 4,\n    \"slidesToScroll\": 1,\n    \"nextArrow\": \"<div class='nav-btn next-slide'></div>\",\n    \"prevArrow\": \"<div class='nav-btn prev-slide'></div>\",\n    \"dots\": true,\n    \"infinite\": false\n  };\n\n  \n\n  slickInit(e) {\n    console.log('slick initialized');\n  }\n\n  breakpoint(e) {\n    console.log('breakpoint');\n  }\n\n  afterChange(e) {\n    console.log('afterChange');\n  }\n\n  beforeChange(e) {\n    console.log('beforeChange');\n  }\n\n\n  ngOnInit(): void {\n    this.getFilms();\n  }\n\n  getFilms(): void {\n    this.filmService.getFilms()\n    .subscribe(films => this.filmsArray = films);\n  }\n\n}\n","\n<section>\n    <h3>HEllo</h3>\n    <swiper [config]=\"\">\n                    <div class=\"swiper-wrapper\">\n                        <div *ngFor=\"let film of filmsArray\">\n                            <img class=\"swiper-slide\" src=\"{{film.urlimg}}\"  width=\"240\">\n                        </div>\n                    </div>\n                    <div class=\"swiper-button-next\"></div>\n                    <div class=\"swiper-button-prev\"></div>\n    </swiper>\n\n        <ngx-slick-carousel class=\"carousel\" #slickModal=\"slick-carousel\" [config]=\"slideConfig\" (init)=\"slickInit($event)\"\n        (breakpoint)=\"breakpoint($event)\" (afterChange)=\"afterChange($event)\" (beforeChange)=\"beforeChange($event)\">\n        <div ngxSlickItem *ngFor=\"let film of filmsArray\" class=\"slide\">\n            <img class=\"swiper-slide\" src=\"{{film.urlimg}}\"  width=\"240\">\n        </div>\n      </ngx-slick-carousel>\n\n      <button (click)=\"slickModal.slickGoTo(2)\">slickGoto 2</button>\n      <button (click)=\"slickModal.unslick()\">unslick</button>\n  \n    <router-outlet></router-outlet>\n</section>","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Film } from \"../model/film\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable({ providedIn: \"root\" })\nexport class FilmService {\n  private filmsUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.filmsUrl = \"http://localhost:7000/films-service/films\";\n  }\n\n  getFilms(): Observable<Film[]> {\n    return this.http.get<Film[]>(this.filmsUrl);\n  }\n\n  getFilmById(id: number): Observable<Film> {\n    const url = `${this.filmsUrl}/${id}`;\n    return this.http.get<Film>(url);\n  }\n\n  getCourseByName(name: string): Observable<Film[]> {\n    const url = `${this.filmsUrl}/${name}`;\n    return this.http.get<Film[]>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}